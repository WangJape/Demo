server:
  port: 80
spring:
  kafka:
    bootstrap-servers: 10.7.3.168:9092 #指定kafka server的地址，集群配多个，中间','逗号隔开
    producer:
      #acks = 0 如果设置为零，则生产者将不会等待来自服务器的任何确认，该记录将立即添加到套接字缓冲区并视为已发送。在这种情况下，无法保证服务器已收到记录，并且重试配置将不会生效（因为客户端通常不会知道任何故障），为每条记录返回的偏移量始终设置为-1。
      #acks = 1 这意味着leader会将记录写入其本地日志，但无需等待所有副本服务器的完全确认即可做出回应，在这种情况下，如果leader在确认记录后立即失败，但在将数据复制到所有的副本服务器之前，则记录将会丢失。
      #acks = all 这意味着leader将等待完整的同步副本集以确认记录，这保证了只要至少一个同步副本服务器仍然存活，记录就不会丢失，这是最强有力的保证，这相当于acks = -1的设置。
      #可以设置的值为：all, -1, 0, 1
      acks: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      #如果消费者集群分别设置的的组ID不同，那么该消息将变为主题订阅消息。所有的消费者将取得各自的全部内容。组不同不同消费者接收到的消息数据是相同的。
      #如果消费者集群中组ID相同，则一个Partition（分区）对应一个消费者，消费者在小于分区数量时，一个消费者可对应多个分区
      group-id: test_log_group #群组ID
      #设置自动提交offset
      enable-auto-commit: true
      #如果'nable-auto-commit'为true，则消费者偏移自动提交给Kafka的频率（以毫秒为单位），默认值为5000
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer


